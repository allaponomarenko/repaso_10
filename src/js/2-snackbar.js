import iziToast from 'izitoast';
import 'izitoast/dist/css/iziToast.min.css';

//üî∏ DOMContentLoaded —á–µ–∫–∞—î, –ø–æ–∫–∏ HTML –ø–æ–≤–Ω—ñ—Å—Ç—é –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç—å—Å—è.
document.addEventListener('DOMContentLoaded', () => {
  //üî∏ querySelector('input[name="delay"]') —à—É–∫–∞—î input –∑ name="delay".
  const delayInput = document.querySelector('input[name="delay"]');
  if (delayInput) {
    //üî∏ .classList.add('delay-input') –¥–æ–¥–∞—î CSS-–∫–ª–∞—Å –¥–æ —Ü—å–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞.
    delayInput.classList.add('delay-input');
  }

  //üîπ –¶–µ –∑–Ω–∞—Ö–æ–¥–∏—Ç—å —É—Å—ñ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∏, —É —è–∫–∏—Ö —î –∞—Ç—Ä–∏–±—É—Ç name="state"
  const stateInputs = document.querySelectorAll('input[name="state"]');
  //üîπ –ú–∏ –ø–µ—Ä–µ–±–∏—Ä–∞—î–º–æ –∫–æ–∂–µ–Ω –∑–Ω–∞–π–¥–µ–Ω–∏–π input –ø–æ —á–µ—Ä–∑—ñ (—ó—Ö –º–æ–∂–µ –±—É—Ç–∏ 2 –∞–±–æ –±—ñ–ª—å—à–µ).
  stateInputs.forEach(input => {
    //üîπ –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è value –¥–æ—Ä—ñ–≤–Ω—é—î 'fulfilled' ‚Äî –¥–æ–¥–∞—î–º–æ –∫–ª–∞—Å .fulfilled-input
    if (input.value === 'fulfilled') {
      input.classList.add('fulfilled-input');
      //üîπ –Ø–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è value –¥–æ—Ä—ñ–≤–Ω—é—î 'rejected' ‚Äî –¥–æ–¥–∞—î–º–æ –∫–ª–∞—Å .rejected-input
    } else if (input.value === 'rejected') {
      input.classList.add('rejected-input');
    }
  });

  //üî∏–®—É–∫–∞—î–º–æ –±–ª–æ–∫ <fieldset> —É —Ñ–æ—Ä–º—ñ ‚Äî —Ü–µ —Ç–æ–π, —â–æ –æ–±–≥–æ—Ä—Ç–∞—î —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∏ fulfilled —ñ rejected.
  //üî∏–Ø–∫—â–æ –∑–Ω–∞–π—à–ª–∏ ‚Äî –¥–æ–¥–∞—î–º–æ –π–æ–º—É –∫–ª–∞—Å .state-fieldset, —â–æ–± –º–æ–∂–Ω–∞ –±—É–ª–æ –æ–∫—Ä–µ–º–æ —Å—Ç–∏–ª—ñ–∑—É–≤–∞—Ç–∏ —Ü–µ–π –±–ª–æ–∫ —É CSS.
  const fieldset = document.querySelector('fieldset');
  if (fieldset) {
    fieldset.classList.add('state-fieldset');
  }
  //üî∏ –ù–µ –¥–æ–∑–≤–æ–ª—è—î–º–æ —Ñ–æ—Ä–º—ñ ‚Äú–ø–µ—Ä–µ–∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É‚Äù, —è–∫ —Ü–µ –±—É–≤–∞—î –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –ø—Ä–∏ submit. –¢–µ–ø–µ—Ä –º–∏ –≤—Å–µ –∫–æ–Ω—Ç—Ä–æ–ª—é—î–º–æ –≤—Ä—É—á–Ω—É.
  const form = document.querySelector('.form');
  form.addEventListener('submit', (event, e) => {
    event.preventDefault();

    //üî∏–ë–µ—Ä–µ–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑ –ø–æ–ª—è Delay —ñ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î–º–æ –≤ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 1000 –º—Å).
    const delay = parseInt(delayInput.value);
    //üî∏ –ó–Ω–∞—Ö–æ–¥–∏–º–æ, —è–∫–∞ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∞ –æ–±—Ä–∞–Ω–∞ (—Ç–æ–±—Ç–æ, –º–∞—î checked)
    //üî∏ –Ü –∑—á–∏—Ç—É—î–º–æ —ó—ó –∑–Ω–∞—á–µ–Ω–Ω—è (value): –∞–±–æ 'fulfilled', –∞–±–æ 'rejected'.
    const selectedState = Array.from(stateInputs).find(
      input => input.checked
    ).value;

    //üî∏ –ü–µ—Ä–µ–¥–∞—î–º–æ –∑–∞—Ç—Ä–∏–º–∫—É (–º—Å) —Ç–∞ —Å—Ç–∞–Ω (fulfilled –∞–±–æ rejected) —É —Ñ—É–Ω–∫—Ü—ñ—é, —è–∫–∞ —Å—Ç–≤–æ—Ä–∏—Ç—å –æ–±—ñ—Ü—è–Ω–∫—É (Promise).
    createPromise(delay, selectedState)
      //üî∏ –Ø–∫—â–æ Promise —É—Å–ø—ñ—à–Ω–æ –≤–∏–∫–æ–Ω–∞–≤—Å—è ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ –∑–µ–ª–µ–Ω–∏–π —Ç–æ—Å—Ç ‚úÖ
      .then(delay => {
        iziToast.success({
          title: 'Succes',
          message: `‚úÖ Fulfilled promise in ${delay}ms`,
          position: 'topCenter',
        });
      })
      //üî∏ –Ø–∫—â–æ Promise –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ ‚Äî –ø–æ–∫–∞–∑—É—î–º–æ —á–µ—Ä–≤–æ–Ω–∏–π —Ç–æ—Å—Ç ‚ùå
      .catch(delay => {
        iziToast.error({
          title: 'Error',
          message: `‚ùå Rejected promise in ${delay}ms`,
          position: 'topCenter',
        });
      });
  });

  //üî∏ –¶–µ —Ñ—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –≤—ñ–¥–∫–ª–∞–¥–µ–Ω—É –æ–±—ñ—Ü—è–Ω–∫—É:
  //üî∏—á–µ–∫–∞—î delay –º—ñ–ª—ñ—Å–µ–∫—É–Ω–¥;
  //üî∏—è–∫—â–æ state === 'fulfilled' ‚Äî –≤–∏–∫–æ–Ω—É—î resolve();
  //üî∏—è–∫—â–æ state === 'rejected' ‚Äî –≤–∏–∫–æ–Ω—É—î reject().
  //üî∏–¶–µ —ñ–º—ñ—Ç–∞—Ü—ñ—è —Å–ø—Ä–∞–≤–∂–Ω—ñ—Ö –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü—ñ–π, —è–∫ –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–∞–ø–∏—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä.
  function createPromise(delay, state) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        if (state === 'fulfilled') {
          resolve(delay);
        } else {
          reject(delay);
        }
      }, delay);
    });
  }
});

/**
 * ‚úÖ –ü—ñ–¥—Å—É–º–æ–∫
 * –ö–ª–∞—Å state-fieldset ‚Äî –¥–ª—è —Å—Ç–∏–ª—ñ–∑–∞—Ü—ñ—ó –±–ª–æ–∫—É –∑ —Ä–∞–¥—ñ–æ-–∫–Ω–æ–ø–∫–∞–º–∏.
 * –ü—Ä–∏ submit –∑—á–∏—Ç—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è.
 * –°—Ç–≤–æ—Ä—é—î–º–æ –≤—ñ–¥–∫–ª–∞–¥–µ–Ω—É –æ–±—ñ—Ü—è–Ω–∫—É.
 * –ü–æ–∫–∞–∑—É—î–º–æ —Ç–æ—Å—Ç —É —Å—Ç–∏–ª—ñ Success –∞–±–æ Error —á–µ—Ä–µ–∑ iziToast.
 */
